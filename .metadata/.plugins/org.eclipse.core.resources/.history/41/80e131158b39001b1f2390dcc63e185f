package com.skilldistillery.rental.entities;

import java.time.LocalDate;

@Entity
public class Customer {

				
				@Id
				@GeneratedValue(strategy = GenerationType.IDENTITY)
				private int id;
				
				private String  type;
				
				@Column(name = "start_date")
				private LocalDate  startDate;
				
				@Column(name = "start_time")
				private LocalTime  start_time;
				
				@Column(name = "end_date")
				private LocalDate  endDate;
				
				@Column(name = "end_time")
				private LocalTime  end_time;

				public Customer() {
					super();
				}

				public int getId() {
					return id;
				}

				public void setId(int id) {
					this.id = id;
				}

				public String getType() {
					return type;
				}

				public void setType(String type) {
					this.type = type;
				}

				public LocalDate getStartDate() {
					return startDate;
				}

				public void setStartDate(LocalDate startDate) {
					this.startDate = startDate;
				}

				public LocalTime getStart_time() {
					return start_time;
				}

				public void setStart_time(LocalTime start_time) {
					this.start_time = start_time;
				}

				public LocalDate getEndDate() {
					return endDate;
				}

				public void setEndDate(LocalDate endDate) {
					this.endDate = endDate;
				}

				public LocalTime getEnd_time() {
					return end_time;
				}

				public void setEnd_time(LocalTime end_time) {
					this.end_time = end_time;
				}

				@Override
				public String toString() {
					return "Customer [id=" + id + ", type=" + type + ", startDate=" + startDate + ", endDate=" + endDate
							+ "]";
				}

				@Override
				public int hashCode() {
					final int prime = 31;
					int result = 1;
					result = prime * result + id;
					return result;
				}

				@Override
				public boolean equals(Object obj) {
					if (this == obj)
						return true;
					if (obj == null)
						return false;
					if (getClass() != obj.getClass())
						return false;
					Customer other = (Customer) obj;
					if (id != other.id)
						return false;
					return true;
				}
				
				
				
				
				
}

